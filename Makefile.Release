#############################################################################
# Makefile for building: DIYGUI
# Generated by qmake (2.01a) (Qt 4.5.2) on: ? ?? 23 15:45:21 2010
# Project:  DIYGUI.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"e:\Qt\qt\include\QtCore" -I"e:\Qt\qt\include\QtGui" -I"e:\Qt\qt\include\QtXml" -I"e:\Qt\qt\include" -I"e:\Qt\qt\include\ActiveQt" -I"release" -I"." -I"e:\Qt\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"e:\Qt\qt\lib" -lmingw32 -lqtmain -lQtXml4 -lQtGui4 -lQtCore4
QMAKE         = e:\Qt\qt\bin\qmake.exe
IDC           = e:\Qt\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = XmlReader.cpp \
		textwidget.cpp \
		mainwindow.cpp \
		main.cpp \
		loaddlg.cpp \
		Gui.cpp \
		paintwidget.cpp release\moc_mainwindow.cpp \
		release\moc_loaddlg.cpp \
		release\moc_paintwidget.cpp
OBJECTS       = release/XmlReader.o \
		release/textwidget.o \
		release/mainwindow.o \
		release/main.o \
		release/loaddlg.o \
		release/Gui.o \
		release/paintwidget.o \
		release/moc_mainwindow.o \
		release/moc_loaddlg.o \
		release/moc_paintwidget.o
DIST          = 
QMAKE_TARGET  = DIYGUI
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = DIYGUI.exe
DESTDIR_TARGET = release\DIYGUI.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_loaddlg.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.DIYGUI.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec e:\Qt\qt\mkspecs\win32-g++ -win32 CONFIG+=release -o Makefile.Release DIYGUI.pro

dist:
	$(ZIP) DIYGUI.zip $(SOURCES) $(DIST) DIYGUI.pro e:\Qt\qt\mkspecs\qconfig.pri e:\Qt\qt\mkspecs\features\qt_functions.prf e:\Qt\qt\mkspecs\features\qt_config.prf e:\Qt\qt\mkspecs\features\exclusive_builds.prf e:\Qt\qt\mkspecs\features\default_pre.prf e:\Qt\qt\mkspecs\features\win32\default_pre.prf e:\Qt\qt\mkspecs\features\release.prf e:\Qt\qt\mkspecs\features\debug_and_release.prf e:\Qt\qt\mkspecs\features\default_post.prf e:\Qt\qt\mkspecs\features\win32\default_post.prf e:\Qt\qt\mkspecs\features\build_pass.prf e:\Qt\qt\mkspecs\features\win32\rtti.prf e:\Qt\qt\mkspecs\features\win32\exceptions.prf e:\Qt\qt\mkspecs\features\win32\stl.prf e:\Qt\qt\mkspecs\features\shared.prf e:\Qt\qt\mkspecs\features\warn_on.prf e:\Qt\qt\mkspecs\features\qt.prf e:\Qt\qt\mkspecs\features\win32\thread.prf e:\Qt\qt\mkspecs\features\moc.prf e:\Qt\qt\mkspecs\features\win32\windows.prf e:\Qt\qt\mkspecs\features\resources.prf e:\Qt\qt\mkspecs\features\uic.prf e:\Qt\qt\mkspecs\features\yacc.prf e:\Qt\qt\mkspecs\features\lex.prf e:\Qt\qt\mkspecs\features\include_source_dir.prf e:\Qt\qt\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\XmlReader.o release\textwidget.o release\mainwindow.o release\main.o release\loaddlg.o release\Gui.o release\paintwidget.o release\moc_mainwindow.o release\moc_loaddlg.o release\moc_paintwidget.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_mainwindow.cpp release/moc_loaddlg.cpp release/moc_paintwidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_mainwindow.cpp release\moc_loaddlg.cpp release\moc_paintwidget.cpp
release/moc_mainwindow.cpp: Gui.h \
		paintwidget.h \
		textwidget.h \
		XmlReader.h \
		mainwindow.h
	E:/Qt/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o release\moc_mainwindow.cpp

release/moc_loaddlg.cpp: loaddlg.h
	E:/Qt/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 loaddlg.h -o release\moc_loaddlg.cpp

release/moc_paintwidget.cpp: paintwidget.h
	E:/Qt/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 paintwidget.h -o release\moc_paintwidget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_loaddlg.h
compiler_uic_clean:
	-$(DEL_FILE) ui_loaddlg.h
ui_loaddlg.h: loaddlg.ui
	e:\Qt\qt\bin\uic.exe loaddlg.ui -o ui_loaddlg.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

release/XmlReader.o: XmlReader.cpp XmlReader.h \
		Gui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\XmlReader.o XmlReader.cpp

release/textwidget.o: textwidget.cpp textwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\textwidget.o textwidget.cpp

release/mainwindow.o: mainwindow.cpp mainwindow.h \
		Gui.h \
		paintwidget.h \
		textwidget.h \
		XmlReader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mainwindow.o mainwindow.cpp

release/main.o: main.cpp loaddlg.h \
		mainwindow.h \
		Gui.h \
		paintwidget.h \
		textwidget.h \
		XmlReader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/loaddlg.o: loaddlg.cpp loaddlg.h \
		ui_loaddlg.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\loaddlg.o loaddlg.cpp

release/Gui.o: Gui.cpp Gui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Gui.o Gui.cpp

release/paintwidget.o: paintwidget.cpp PaintWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\paintwidget.o paintwidget.cpp

release/moc_mainwindow.o: release/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_mainwindow.o release\moc_mainwindow.cpp

release/moc_loaddlg.o: release/moc_loaddlg.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_loaddlg.o release\moc_loaddlg.cpp

release/moc_paintwidget.o: release/moc_paintwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_paintwidget.o release\moc_paintwidget.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

